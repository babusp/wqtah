version: '2'
services:
  nginx:
    image: nginx:latest
    container_name: dev-nginx
    restart: always
    ports:
      - "8001:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - .:/usr/src/app
      - ./devlogdna:/var/log/nginx
    depends_on:
      - web
    networks:
      - dev-network
      
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dev-django
    restart: always
    command: bash -c "pip3 install -r requirements.txt && python manage.py collectstatic --noinput && python manage.py migrate && gunicorn wqtah.wsgi -b 0.0.0.0:80"
    volumes:
      - .:/usr/src/app
    expose:
      - "80"
    networks:
      - dev-network

  broker:
    image: rabbitmq:latest
    container_name: dev_rabbitmq
    restart: always
    networks:
      - dev-network

  worker:
    build: .
    image: celery
    container_name: dev_celery
    restart: always
    command: bash -c "celery worker --app=wqtah --concurrency=1 --loglevel=INFO"
    volumes:
      - .:/usr/src/app
    depends_on:
      - broker
    networks:
      - dev-network

  celery-beat:
    build: .
    image: celery
    container_name: dev_celery_beat
    restart: always
    command: bash -c "celery -A wqtah beat -l INFO"
    volumes:
      - .:/usr/src/app
    depends_on:
      - worker
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge
